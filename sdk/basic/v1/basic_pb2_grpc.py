# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from basic.service.v1 import service_pb2 as basic_dot_service_dot_v1_dot_service__pb2


class BasicServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Hello = channel.unary_unary(
                '/basic.v1.BasicService/Hello',
                request_serializer=basic_dot_service_dot_v1_dot_service__pb2.HelloRequest.SerializeToString,
                response_deserializer=basic_dot_service_dot_v1_dot_service__pb2.HelloResponse.FromString,
                _registered_method=True)
        self.Talk = channel.stream_stream(
                '/basic.v1.BasicService/Talk',
                request_serializer=basic_dot_service_dot_v1_dot_service__pb2.TalkRequest.SerializeToString,
                response_deserializer=basic_dot_service_dot_v1_dot_service__pb2.TalkResponse.FromString,
                _registered_method=True)
        self.Background = channel.unary_stream(
                '/basic.v1.BasicService/Background',
                request_serializer=basic_dot_service_dot_v1_dot_service__pb2.BackgroundRequest.SerializeToString,
                response_deserializer=basic_dot_service_dot_v1_dot_service__pb2.BackgroundResponse.FromString,
                _registered_method=True)


class BasicServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Hello(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Talk(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Background(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BasicServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Hello': grpc.unary_unary_rpc_method_handler(
                    servicer.Hello,
                    request_deserializer=basic_dot_service_dot_v1_dot_service__pb2.HelloRequest.FromString,
                    response_serializer=basic_dot_service_dot_v1_dot_service__pb2.HelloResponse.SerializeToString,
            ),
            'Talk': grpc.stream_stream_rpc_method_handler(
                    servicer.Talk,
                    request_deserializer=basic_dot_service_dot_v1_dot_service__pb2.TalkRequest.FromString,
                    response_serializer=basic_dot_service_dot_v1_dot_service__pb2.TalkResponse.SerializeToString,
            ),
            'Background': grpc.unary_stream_rpc_method_handler(
                    servicer.Background,
                    request_deserializer=basic_dot_service_dot_v1_dot_service__pb2.BackgroundRequest.FromString,
                    response_serializer=basic_dot_service_dot_v1_dot_service__pb2.BackgroundResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'basic.v1.BasicService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('basic.v1.BasicService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class BasicService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Hello(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/basic.v1.BasicService/Hello',
            basic_dot_service_dot_v1_dot_service__pb2.HelloRequest.SerializeToString,
            basic_dot_service_dot_v1_dot_service__pb2.HelloResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Talk(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/basic.v1.BasicService/Talk',
            basic_dot_service_dot_v1_dot_service__pb2.TalkRequest.SerializeToString,
            basic_dot_service_dot_v1_dot_service__pb2.TalkResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Background(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/basic.v1.BasicService/Background',
            basic_dot_service_dot_v1_dot_service__pb2.BackgroundRequest.SerializeToString,
            basic_dot_service_dot_v1_dot_service__pb2.BackgroundResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
